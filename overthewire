Bandits Wargame

Commands you may need to solve these levels
ls, cd, cat, file, du, find, grep

Level 1 
loginned via bandit0 and bandit0
ls for locating file in the current directory
found readme file
cat readme gave boJ9jbbUNNfktd78OOpsqOltutMc3MY1 which is password for next level bandit1

Level 2
ls gave a file named -
we can open it via cat ./- or any other operation with other commands we have to use -- or even we can use cat < -
it gave the password for level bandit2
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

level 3
upon ls a file is there called
spaces in this filename
yeah literally, so we have to open it we can open it by using "" or ' '
or use \ between the every spaced letter
so after cat "spaces in this filename", it gave
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK for bandit3

Level 4
we got a directory named in here upon ls
cd inhere and ls gave nothing but since the level suggested it has a hidden filename
ls -la gave .hidden file
cat .hidden gave 
pIwrPrtPN36QITSp3EQaw936yaFoFgAB for bandit4

level 5
upon ls gave inhere directory, on cd to it, it gave 9 files with -file00 to 09 series
cat on first file gave bizzare output, since the intro to level gave that the password is in a human readable
so we can either check each of them and clearing our screen if it messed up but there is also a better way
file is a command which can be used for seeing file type, now we have to list all the files with type in single command
file * gave error as the name starts with - so we have to do
file -- *
which will list all the types
-file00: data
-file01: data
-file02: data
-file03: data
-file04: data
-file05: data
-file06: data
-file07: ASCII text
-file08: data
-file09: data
here file 7 is readable which gave
koReBOKuIDDepwhWk7jZC0RTdopnAYKh for bandit5

level 6
the guide says the file has these properties:
human-readable
1033 bytes in size
not executable
upon ls, a directory inhere with many subdirectories maybeinhere found, which further contained many other files with spaced, dot, - names in naming
we can use ls * -lh and analyze the file size nearest 1.(something)K but we have to do this manaully, so I found find command with -size parameter will
shorten our search process, I simply searched
find ./ -size 1033c (c for bytes)
which gave
./maybehere07/.file2
upon file on it, it gave 
./maybehere07/.file2: ASCII text, with very long lines
cat gives 
DXjZPULLxYr17uwoI01bNLQbtFemEgo7 with long spaces, tried for bandit6 and it worked :)

Level 7
the guide says the file has these properties:
owned by user bandit7
owned by group bandit6
33 bytes in size
so, ls gave nothing, neither ls -la
so maybe the file is under / and not in the current user directory
found out find command has parameters to search files for groups, users and size
so,
find / -size 33c -group bandit6 -user bandit7
gave long list of permission denied except
/var/lib/dpkg/info/bandit7.password
which upon cat gave
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs for bandit7

Commands you may need to solve these levels
grep, sort, uniq, strings, base64, tr, tar, gzip, bzip2, xxd

level 8
The guide or level goal says
The password for the next level is stored in the file data.txt next to the word millionth
so
ls gave data.txt on present working directory
then
grep millionth data.txt gave
millionth       cvX2JJa4CFALtqS87jk27qwqGhBM9plV for bandit8

Level 9
The level goal says
The password for the next level is stored in the file data.txt and is the only line of text that occurs only once
so we have given a file with random keywords like the Flag we have to find, all contains duplicate but at random position
so upon simple 
uniq data.txt it didn't work as uniq work when the duplicates are sequential so for that we have to sort them like
sort data.txt | uniq -u (-u for find only uniq)
which gave
UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR for bandit9

Level 10
The level goal says
The password for the next level is stored in the file data.txt in one of the few human-readable strings, preceded by several ‘=’ characters.
so, 
we use strings command, we see different readable output but to narrow down, we have to pipe to grep with multiple = characters we use only two == like 
strings -d data.txt | grep ==
bingo we found something
========== the*2i"4
========== password
Z)========== is
&========== truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk
the last line characters looks like a password
so truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk is for bandit10

Level 11
The level goal says
The password for the next level is stored in the file data.txt, which contains base64 encoded data
so we have a tool called base64 which decodes or encodes in base64, so upon decode
base64 -d data.txt, it gives
The password is IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR 
which is the password for bandit11

Level 12
The level goal says
The password for the next level is stored in the file data.txt, where all lowercase (a-z) and uppercase (A-Z) letters have been rotated by 13 positions
since as goal says its a rot13, then we have to rotate the keys or translate the cipher, for that we have a tool tr for translating multiples sets
we will be piping the output of the data.txt to tr and translating chars with sets that is [ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz] to 
[NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm], in the tools parameter theres a different usage, it uses A-Z for all uppercase characters A to Z so likewise we will do
cat data.txt | tr -t [a-zA-Z] [N-ZA-Mn-za-m] which will translate every a-z and A-Z character with N-Z, A-M and n-z, a-m
which will give us 
tHE PASSWORD IS 5tE8y4DRGcrFcX8UGDWUex8kfc6K2euU
which is password for bandit 12

Level 13
The level goal says






